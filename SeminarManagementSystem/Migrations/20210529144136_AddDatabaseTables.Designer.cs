// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeminarManagementSystem.Data;

namespace SeminarManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210529144136_AddDatabaseTables")]
    partial class AddDatabaseTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeminarManagementSystem.Models.Attendee", b =>
                {
                    b.Property<int>("Attendee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("Date_Of_Birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Seminar_Id")
                        .HasColumnType("int");

                    b.HasKey("Attendee_Id");

                    b.HasIndex("Seminar_Id");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("SeminarManagementSystem.Models.Organizer", b =>
                {
                    b.Property<int>("Organizer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Fees")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Signing_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Organizer_Id");

                    b.ToTable("Organizers");
                });

            modelBuilder.Entity("SeminarManagementSystem.Models.Seminar", b =>
                {
                    b.Property<int>("Seminar_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Ending_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Organizer_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Seminar_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starting_Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Type_Id")
                        .HasColumnType("int");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Seminar_Id");

                    b.HasIndex("Organizer_Id");

                    b.HasIndex("Type_Id");

                    b.ToTable("Seminars");
                });

            modelBuilder.Entity("SeminarManagementSystem.Models.Type", b =>
                {
                    b.Property<int>("Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Type_Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("SeminarManagementSystem.Models.Attendee", b =>
                {
                    b.HasOne("SeminarManagementSystem.Models.Seminar", "Seminar")
                        .WithMany("Attendees")
                        .HasForeignKey("Seminar_Id");
                });

            modelBuilder.Entity("SeminarManagementSystem.Models.Seminar", b =>
                {
                    b.HasOne("SeminarManagementSystem.Models.Organizer", "Organizer")
                        .WithMany("Seminars")
                        .HasForeignKey("Organizer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarManagementSystem.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("Type_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
